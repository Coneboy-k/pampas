<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.pampas.storage.mapper.GatewayInstanceMapper">
  <resultMap id="BaseResultMap" type="com.github.pampas.storage.entity.GatewayInstance">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="instance_id" jdbcType="VARCHAR" property="instanceId" />
    <result column="group" jdbcType="VARCHAR" property="group" />
    <result column="host" jdbcType="VARCHAR" property="host" />
    <result column="host_name" jdbcType="VARCHAR" property="hostName" />
    <result column="proxy_port" jdbcType="INTEGER" property="proxyPort" />
    <result column="admin_port" jdbcType="INTEGER" property="adminPort" />
    <result column="room" jdbcType="VARCHAR" property="room" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="props" jdbcType="VARCHAR" property="props" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="insert_time" jdbcType="TIMESTAMP" property="insertTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_del" jdbcType="BIT" property="isDel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, instance_id, `group`, `host`, host_name, proxy_port, admin_port, room, `status`, 
    start_time, version, props, remark, insert_time, update_time, is_del
  </sql>
  <select id="selectByExample" parameterType="com.github.pampas.storage.entity.GatewayInstanceCondition" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `p_gateway_instance`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `p_gateway_instance`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `p_gateway_instance`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.github.pampas.storage.entity.GatewayInstanceCondition">
    delete from `p_gateway_instance`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.github.pampas.storage.entity.GatewayInstance">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `p_gateway_instance` (instance_id, `group`, `host`, 
      host_name, proxy_port, admin_port, 
      room, `status`, start_time, 
      version, props, remark, 
      insert_time, update_time, is_del
      )
    values (#{instanceId,jdbcType=VARCHAR}, #{group,jdbcType=VARCHAR}, #{host,jdbcType=VARCHAR}, 
      #{hostName,jdbcType=VARCHAR}, #{proxyPort,jdbcType=INTEGER}, #{adminPort,jdbcType=INTEGER}, 
      #{room,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{startTime,jdbcType=TIMESTAMP}, 
      #{version,jdbcType=VARCHAR}, #{props,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{insertTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{isDel,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.github.pampas.storage.entity.GatewayInstance">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `p_gateway_instance`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="instanceId != null">
        instance_id,
      </if>
      <if test="group != null">
        `group`,
      </if>
      <if test="host != null">
        `host`,
      </if>
      <if test="hostName != null">
        host_name,
      </if>
      <if test="proxyPort != null">
        proxy_port,
      </if>
      <if test="adminPort != null">
        admin_port,
      </if>
      <if test="room != null">
        room,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="props != null">
        props,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="insertTime != null">
        insert_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="instanceId != null">
        #{instanceId,jdbcType=VARCHAR},
      </if>
      <if test="group != null">
        #{group,jdbcType=VARCHAR},
      </if>
      <if test="host != null">
        #{host,jdbcType=VARCHAR},
      </if>
      <if test="hostName != null">
        #{hostName,jdbcType=VARCHAR},
      </if>
      <if test="proxyPort != null">
        #{proxyPort,jdbcType=INTEGER},
      </if>
      <if test="adminPort != null">
        #{adminPort,jdbcType=INTEGER},
      </if>
      <if test="room != null">
        #{room,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="props != null">
        #{props,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null">
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.github.pampas.storage.entity.GatewayInstanceCondition" resultType="java.lang.Long">
    select count(*) from `p_gateway_instance`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `p_gateway_instance`
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.instanceId != null">
        instance_id = #{record.instanceId,jdbcType=VARCHAR},
      </if>
      <if test="record.group != null">
        `group` = #{record.group,jdbcType=VARCHAR},
      </if>
      <if test="record.host != null">
        `host` = #{record.host,jdbcType=VARCHAR},
      </if>
      <if test="record.hostName != null">
        host_name = #{record.hostName,jdbcType=VARCHAR},
      </if>
      <if test="record.proxyPort != null">
        proxy_port = #{record.proxyPort,jdbcType=INTEGER},
      </if>
      <if test="record.adminPort != null">
        admin_port = #{record.adminPort,jdbcType=INTEGER},
      </if>
      <if test="record.room != null">
        room = #{record.room,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.props != null">
        props = #{record.props,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.insertTime != null">
        insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `p_gateway_instance`
    set id = #{record.id,jdbcType=INTEGER},
      instance_id = #{record.instanceId,jdbcType=VARCHAR},
      `group` = #{record.group,jdbcType=VARCHAR},
      `host` = #{record.host,jdbcType=VARCHAR},
      host_name = #{record.hostName,jdbcType=VARCHAR},
      proxy_port = #{record.proxyPort,jdbcType=INTEGER},
      admin_port = #{record.adminPort,jdbcType=INTEGER},
      room = #{record.room,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=TINYINT},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=VARCHAR},
      props = #{record.props,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_del = #{record.isDel,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.pampas.storage.entity.GatewayInstance">
    update `p_gateway_instance`
    <set>
      <if test="instanceId != null">
        instance_id = #{instanceId,jdbcType=VARCHAR},
      </if>
      <if test="group != null">
        `group` = #{group,jdbcType=VARCHAR},
      </if>
      <if test="host != null">
        `host` = #{host,jdbcType=VARCHAR},
      </if>
      <if test="hostName != null">
        host_name = #{hostName,jdbcType=VARCHAR},
      </if>
      <if test="proxyPort != null">
        proxy_port = #{proxyPort,jdbcType=INTEGER},
      </if>
      <if test="adminPort != null">
        admin_port = #{adminPort,jdbcType=INTEGER},
      </if>
      <if test="room != null">
        room = #{room,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="props != null">
        props = #{props,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null">
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.pampas.storage.entity.GatewayInstance">
    update `p_gateway_instance`
    set instance_id = #{instanceId,jdbcType=VARCHAR},
      `group` = #{group,jdbcType=VARCHAR},
      `host` = #{host,jdbcType=VARCHAR},
      host_name = #{hostName,jdbcType=VARCHAR},
      proxy_port = #{proxyPort,jdbcType=INTEGER},
      admin_port = #{adminPort,jdbcType=INTEGER},
      room = #{room,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=VARCHAR},
      props = #{props,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_del = #{isDel,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>