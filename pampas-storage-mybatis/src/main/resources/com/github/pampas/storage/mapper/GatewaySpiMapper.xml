<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.pampas.storage.mapper.GatewaySpiMapper">
  <resultMap id="BaseResultMap" type="com.github.pampas.storage.entity.GatewaySpi">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="gateway_group" jdbcType="VARCHAR" property="gatewayGroup" />
    <result column="gateway_instance_id" jdbcType="VARCHAR" property="gatewayInstanceId" />
    <result column="spi_interface" jdbcType="VARCHAR" property="spiInterface" />
    <result column="spi_interface_desc" jdbcType="VARCHAR" property="spiInterfaceDesc" />
    <result column="spi_class" jdbcType="VARCHAR" property="spiClass" />
    <result column="spi_name" jdbcType="VARCHAR" property="spiName" />
    <result column="spi_desc" jdbcType="VARCHAR" property="spiDesc" />
    <result column="order" jdbcType="INTEGER" property="order" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="push" jdbcType="VARCHAR" property="push" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="insert_time" jdbcType="TIMESTAMP" property="insertTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_del" jdbcType="BIT" property="isDel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gateway_group, gateway_instance_id, spi_interface, spi_interface_desc, spi_class, 
    spi_name, spi_desc, `order`, `status`, push, remark, insert_time, update_time, is_del
  </sql>
  <select id="selectByExample" parameterType="com.github.pampas.storage.entity.GatewaySpiCondition" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `p_gateway_spi`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `p_gateway_spi`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `p_gateway_spi`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.github.pampas.storage.entity.GatewaySpiCondition">
    delete from `p_gateway_spi`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.github.pampas.storage.entity.GatewaySpi">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `p_gateway_spi` (gateway_group, gateway_instance_id, 
      spi_interface, spi_interface_desc, spi_class, 
      spi_name, spi_desc, `order`, 
      `status`, push, remark, insert_time, 
      update_time, is_del)
    values (#{gatewayGroup,jdbcType=VARCHAR}, #{gatewayInstanceId,jdbcType=VARCHAR}, 
      #{spiInterface,jdbcType=VARCHAR}, #{spiInterfaceDesc,jdbcType=VARCHAR}, #{spiClass,jdbcType=VARCHAR}, 
      #{spiName,jdbcType=VARCHAR}, #{spiDesc,jdbcType=VARCHAR}, #{order,jdbcType=INTEGER}, 
      #{status,jdbcType=BIT}, #{push,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{insertTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{isDel,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.github.pampas.storage.entity.GatewaySpi">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `p_gateway_spi`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gatewayGroup != null">
        gateway_group,
      </if>
      <if test="gatewayInstanceId != null">
        gateway_instance_id,
      </if>
      <if test="spiInterface != null">
        spi_interface,
      </if>
      <if test="spiInterfaceDesc != null">
        spi_interface_desc,
      </if>
      <if test="spiClass != null">
        spi_class,
      </if>
      <if test="spiName != null">
        spi_name,
      </if>
      <if test="spiDesc != null">
        spi_desc,
      </if>
      <if test="order != null">
        `order`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="push != null">
        push,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="insertTime != null">
        insert_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gatewayGroup != null">
        #{gatewayGroup,jdbcType=VARCHAR},
      </if>
      <if test="gatewayInstanceId != null">
        #{gatewayInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="spiInterface != null">
        #{spiInterface,jdbcType=VARCHAR},
      </if>
      <if test="spiInterfaceDesc != null">
        #{spiInterfaceDesc,jdbcType=VARCHAR},
      </if>
      <if test="spiClass != null">
        #{spiClass,jdbcType=VARCHAR},
      </if>
      <if test="spiName != null">
        #{spiName,jdbcType=VARCHAR},
      </if>
      <if test="spiDesc != null">
        #{spiDesc,jdbcType=VARCHAR},
      </if>
      <if test="order != null">
        #{order,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="push != null">
        #{push,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null">
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.github.pampas.storage.entity.GatewaySpiCondition" resultType="java.lang.Long">
    select count(*) from `p_gateway_spi`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `p_gateway_spi`
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.gatewayGroup != null">
        gateway_group = #{record.gatewayGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.gatewayInstanceId != null">
        gateway_instance_id = #{record.gatewayInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="record.spiInterface != null">
        spi_interface = #{record.spiInterface,jdbcType=VARCHAR},
      </if>
      <if test="record.spiInterfaceDesc != null">
        spi_interface_desc = #{record.spiInterfaceDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.spiClass != null">
        spi_class = #{record.spiClass,jdbcType=VARCHAR},
      </if>
      <if test="record.spiName != null">
        spi_name = #{record.spiName,jdbcType=VARCHAR},
      </if>
      <if test="record.spiDesc != null">
        spi_desc = #{record.spiDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.order != null">
        `order` = #{record.order,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.push != null">
        push = #{record.push,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.insertTime != null">
        insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `p_gateway_spi`
    set id = #{record.id,jdbcType=INTEGER},
      gateway_group = #{record.gatewayGroup,jdbcType=VARCHAR},
      gateway_instance_id = #{record.gatewayInstanceId,jdbcType=VARCHAR},
      spi_interface = #{record.spiInterface,jdbcType=VARCHAR},
      spi_interface_desc = #{record.spiInterfaceDesc,jdbcType=VARCHAR},
      spi_class = #{record.spiClass,jdbcType=VARCHAR},
      spi_name = #{record.spiName,jdbcType=VARCHAR},
      spi_desc = #{record.spiDesc,jdbcType=VARCHAR},
      `order` = #{record.order,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=BIT},
      push = #{record.push,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_del = #{record.isDel,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.pampas.storage.entity.GatewaySpi">
    update `p_gateway_spi`
    <set>
      <if test="gatewayGroup != null">
        gateway_group = #{gatewayGroup,jdbcType=VARCHAR},
      </if>
      <if test="gatewayInstanceId != null">
        gateway_instance_id = #{gatewayInstanceId,jdbcType=VARCHAR},
      </if>
      <if test="spiInterface != null">
        spi_interface = #{spiInterface,jdbcType=VARCHAR},
      </if>
      <if test="spiInterfaceDesc != null">
        spi_interface_desc = #{spiInterfaceDesc,jdbcType=VARCHAR},
      </if>
      <if test="spiClass != null">
        spi_class = #{spiClass,jdbcType=VARCHAR},
      </if>
      <if test="spiName != null">
        spi_name = #{spiName,jdbcType=VARCHAR},
      </if>
      <if test="spiDesc != null">
        spi_desc = #{spiDesc,jdbcType=VARCHAR},
      </if>
      <if test="order != null">
        `order` = #{order,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=BIT},
      </if>
      <if test="push != null">
        push = #{push,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null">
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.pampas.storage.entity.GatewaySpi">
    update `p_gateway_spi`
    set gateway_group = #{gatewayGroup,jdbcType=VARCHAR},
      gateway_instance_id = #{gatewayInstanceId,jdbcType=VARCHAR},
      spi_interface = #{spiInterface,jdbcType=VARCHAR},
      spi_interface_desc = #{spiInterfaceDesc,jdbcType=VARCHAR},
      spi_class = #{spiClass,jdbcType=VARCHAR},
      spi_name = #{spiName,jdbcType=VARCHAR},
      spi_desc = #{spiDesc,jdbcType=VARCHAR},
      `order` = #{order,jdbcType=INTEGER},
      `status` = #{status,jdbcType=BIT},
      push = #{push,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_del = #{isDel,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>